# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.5)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
rbind(SIRdf, c(1,1,1,1))
#transitions
steps = 500
for(i in 1:steps){
# S to I
# The probabilities are sum(infected not isolated)/N
# 0.2 to spread if you make contact
Pcontact <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/N
#Pspread <- 0.4
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread)
# I to R
# this is a stationary probability
#Precover = 0.1
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
#Stepwise Model
#init
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
mod <- matrix(NA, nrow = N, ncol = 2)
colnames(mod) <- c("Step","Isolation")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.5)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
rbind(SIRdf, c(1,1,1,1))
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
#transitions
steps = 500
for(i in 1:steps){
# S to I
# The probabilities are sum(infected not isolated)/N
# 0.2 to spread if you make contact
Pcontact <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/N
#Pspread <- 0.4
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread)
# I to R
# this is a stationary probability
#Precover = 0.1
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red"))
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,250)
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "green")) + geom_line(aes(y = I, colour = "yellow")) + geom_line(aes(y = R, colour = "red")) + xlim(0,250)
SIRdf
#transitions
steps = 500
for(i in 1:steps){
# S to I
# The probabilities are sum(infected not isolated)/N
# 0.2 to spread if you make contact
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/N
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread * Pmeet)
# I to R
# this is a stationary probability
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
#Stepwise Model
#init
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
mod <- matrix(NA, nrow = N, ncol = 2)
colnames(mod) <- c("Step","Isolation")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.5)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
#transitions
steps = 500
for(i in 1:steps){
# S to I
# The probabilities are sum(infected not isolated)/N
# 0.2 to spread if you make contact
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/N
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread * Pmeet)
# I to R
# this is a stationary probability
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
mod[mod[,"isolation"] == 1, "isolation"]
mod[mod[,"isolation"] == 1, "isolation"]
mod[mod[,"isolation"] == 1, "isolation"]
mod[mod[,"isolation"] == 1, "isolation"]
mod[mod[,"Isolation"] == 1, "Isolation"]
#Stepwise Model
#init population and probabilities
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 2)
colnames(mod) <- c("Step","Isolation")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.01)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
mod[mod[,"Isolation"] == 1, "Isolation"]
sum(mod[mod[,"Isolation"] == 1, "Isolation"])
sum(mod[mod[,"Isolation"] == 0, "Isolation"])
count(mod[mod[,"Isolation"] == 0, "Isolation"])
length(mod[mod[,"Isolation"] == 0, "Isolation"])
#transitions
steps = 500
for(i in 1:steps){
# S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/ length(mod[mod[,"Isolation"] == 0, "Isolation"])
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread * Pmeet)
# I to R
# this is a stationary probability
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "green")) + geom_line(aes(y = I, colour = "yellow")) + geom_line(aes(y = R, colour = "red")) + xlim(0,250)
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "green")) + geom_line(aes(y = I, colour = "yellow")) + geom_line(aes(y = R, colour = "red")) + xlim(0,250)
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
#Stepwise Model
#init population and probabilities
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 2)
colnames(mod) <- c("Step","Isolation")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.01)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
reset
restart
clear
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
#Stepwise Model
#init population and probabilities
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 2)
colnames(mod) <- c("Step","Isolation")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.01)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
#transitions
steps = 500
for(i in 1:steps){
# S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/ length(mod[mod[,"Isolation"] == 0, "Isolation"])
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread * Pmeet)
# I to R
# this is a stationary probability
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "green")) + geom_line(aes(y = I, colour = "yellow")) + geom_line(aes(y = R, colour = "red")) + xlim(0,250)
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#Stepwise Model
#init population and probabilities
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.01)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
head(mod)
mod[,"Isolation Counter"] <- 0
head(mod)
mod[mod[,"Isolation"] == 1, "Isolation Counter"]
mod[mod[,"Isolation"] == 1, "Isolation Counter"] += 1
mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
#transitions
steps = 500
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/ length(mod[mod[,"Isolation"] == 0, "Isolation"])
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread * Pmeet)
# I to R
# this is a stationary probability
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
#Stepwise Model
#init population and probabilities
S <-  50000
I <-  20
R <-  0
N = S + I + R
Pspread <-  0.4
Pcontact <-  0.6
Precover <-  0.1
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# 0.05 of S isolate
# 0.1 of I isolate
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), 0.01)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), 0.1)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
mod[,"Isolation Counter"] <- 0
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = I)
#transitions
steps = 500
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0 ) , "Step"])/ length(mod[mod[,"Isolation"] == 0, "Isolation"])
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]  +  rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0 ) , "Step"]), Pcontact * Pspread * Pmeet)
# I to R
# this is a stationary probability
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#updates data frame
newS <- sum(mod[,"Step"] == 1)
newI <- sum(mod[,"Step"] == 2)
newR <- sum(mod[,"Step"] == 3)
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
