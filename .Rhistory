#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- nrow(mod[mod[,"Step"] == 1,])
newI <- nrow(mod[mod[,"Step"] == 2,])
newR <- nrow(mod[mod[,"Step"] == 3,])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
#sends a proportion of S to isolation
candidate.isolation <- which(mod[,"Step"] == 1 & mod[,"Isolation"] == 0)
S.iso.transition <- rbern(length(candidate.isolation), S.new.iso)
mod[candidate.isolation,c("Isolation","Isolation Counter")] <- cbind(S.iso.transition,S.iso.transition)
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0) , "Step"])/
nrow(mod[ mod[,"Isolation"] == 0,])
transition <- rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]), Pspread * Pmeet)
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]  +  transition
I.iso.transition <- rbern(nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")]), I.new.iso)
I.iso.transition <- rbern(nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
I.iso.transition <- rbern(nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")]), I.new.iso)
I.iso.transition <- rbern(nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")]), I.new.iso)
I.iso.transition <- rbern(nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")]), I.new.iso)
nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")])
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")]
nrow(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, ])
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, ]
dim(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, ])
length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, ])
length(mod)
nrow(mod)
nrow(mod) * ncol(mod)
(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"])
length(mod[,"Isolation"])
I.iso.transition <- rbern(length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
# Stationary Transition rate Precover
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- nrow(mod[mod[,"Step"] == 1,])
newI <- nrow(mod[mod[,"Step"] == 2,])
newR <- nrow(mod[mod[,"Step"] == 3,])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
### Parameters
#init population and probabilities
S <-  499980
I <-  20
R <-  0
#proportion of S and I isolating at initial
S.isolate <- 0.05
I.isolate <- 0.01
#beginning params
Pspread <-  0.01
Pcontact <-  0.2
Precover <-  0.05
#proportion in isolation (eg 10% of infected goes into isolation each round)
S.new.iso <- 0.005
I.new.iso <- 0.05
N = S + I + R
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# S.isolate in isolation
# I.isolate in isolation
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), S.isolate)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), I.isolate)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
mod[,"Isolation Counter"] <- 0
#display test
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = R)
SIRdf
#transitions
steps = 200
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
#sends a proportion of S to isolation
candidate.isolation <- which(mod[,"Step"] == 1 & mod[,"Isolation"] == 0)
S.iso.transition <- rbern(length(candidate.isolation), S.new.iso)
mod[candidate.isolation,c("Isolation","Isolation Counter")] <- cbind(S.iso.transition,S.iso.transition)
#mod[candidate.isolation,c("Isolation","Isolation Counter")]
#Transition from S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0) , "Step"])/
nrow(mod[ mod[,"Isolation"] == 0,])
transition <- rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]), Pspread * Pmeet)
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]  +  transition
# I to R
#Sends a proportion of Infected to Isolation (Utility < 1 sd)
I.iso.transition <- rbern(length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
# Stationary Transition rate Precover
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- nrow(mod[mod[,"Step"] == 1,])
newI <- nrow(mod[mod[,"Step"] == 2,])
newR <- nrow(mod[mod[,"Step"] == 3,])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "Suseptible")) + geom_line(aes(y = I, colour = "Infected")) + geom_line(aes(y = R, colour = "Recovered")) + xlim(0,250)
mod[mod[,"Step"] == 2,]
nrow(mod[mod[,"Step"] == 2,])
nrow(mod[mod[,"Step"] == 1,])
mod[mod[,"Step"] == 2,"Isolation"]
mod[mod[,"Step"] == 2,]
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
### Parameters
#init population and probabilities
S <-  499980
I <-  20
R <-  0
#proportion of S and I isolating at initial
S.isolate <- 0.05
I.isolate <- 0.01
#beginning params
Pspread <-  0.01
Pcontact <-  0.2
Precover <-  0.05
#proportion in isolation (eg 10% of infected goes into isolation each round)
S.new.iso <- 0.005
I.new.iso <- 0.05
N = S + I + R
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# S.isolate in isolation
# I.isolate in isolation
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), S.isolate)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), I.isolate)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
mod[,"Isolation Counter"] <- 0
#display test
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = R)
SIRdf
#transitions
steps = 200
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
#sends a proportion of S to isolation
candidate.isolation <- which(mod[,"Step"] == 1 & mod[,"Isolation"] == 0)
S.iso.transition <- rbern(length(candidate.isolation), S.new.iso)
mod[candidate.isolation,c("Isolation","Isolation Counter")] <- cbind(S.iso.transition,S.iso.transition)
#mod[candidate.isolation,c("Isolation","Isolation Counter")]
#Transition from S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0) , "Step"])/
nrow(mod[ mod[,"Isolation"] == 0,])
transition <- rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]), Pspread * Pmeet)
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]  +  transition
# I to R
#Sends a proportion of Infected to Isolation (Utility < 1 sd)
I.iso.transition <- rbern(length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
# Stationary Transition rate Precover
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- length(mod[mod[,"Step"] == 1,"Isolation"])
newI <- length(mod[mod[,"Step"] == 2,"Isolation"])
newR <- length(mod[mod[,"Step"] == 3,"Isolation"])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "Suseptible")) + geom_line(aes(y = I, colour = "Infected")) + geom_line(aes(y = R, colour = "Recovered")) + xlim(0,250)
### Parameters
#init population and probabilities
S <-  499980
I <-  20
R <-  0
#proportion of S and I isolating at initial
S.isolate <- 0.05
I.isolate <- 0.01
#beginning params
Pspread <-  0.1
Pcontact <-  0.2
Precover <-  0.05
#proportion in isolation (eg 10% of infected goes into isolation each round)
S.new.iso <- 0.005
I.new.iso <- 0.05
N = S + I + R
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# S.isolate in isolation
# I.isolate in isolation
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), S.isolate)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), I.isolate)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
mod[,"Isolation Counter"] <- 0
#display test
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = R)
SIRdf
#transitions
steps = 200
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
#sends a proportion of S to isolation
candidate.isolation <- which(mod[,"Step"] == 1 & mod[,"Isolation"] == 0)
S.iso.transition <- rbern(length(candidate.isolation), S.new.iso)
mod[candidate.isolation,c("Isolation","Isolation Counter")] <- cbind(S.iso.transition,S.iso.transition)
#mod[candidate.isolation,c("Isolation","Isolation Counter")]
#Transition from S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0) , "Step"])/
nrow(mod[ mod[,"Isolation"] == 0,])
transition <- rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]), Pspread * Pmeet)
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]  +  transition
# I to R
#Sends a proportion of Infected to Isolation (Utility < 1 sd)
I.iso.transition <- rbern(length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
# Stationary Transition rate Precover
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- length(mod[mod[,"Step"] == 1,"Isolation"])
newI <- length(mod[mod[,"Step"] == 2,"Isolation"])
newR <- length(mod[mod[,"Step"] == 3,"Isolation"])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "Suseptible")) + geom_line(aes(y = I, colour = "Infected")) + geom_line(aes(y = R, colour = "Recovered")) + xlim(0,250)
### Parameters
#init population and probabilities
S <-  499980
I <-  20
R <-  0
#proportion of S and I isolating at initial
S.isolate <- 0.05
I.isolate <- 0.01
#beginning params
Pspread <-  0.6
Pcontact <-  0.2
Precover <-  0.05
#proportion in isolation (eg 10% of infected goes into isolation each round)
S.new.iso <- 0.005
I.new.iso <- 0.05
N = S + I + R
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# S.isolate in isolation
# I.isolate in isolation
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), S.isolate)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), I.isolate)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
mod[,"Isolation Counter"] <- 0
#display test
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = R)
SIRdf
#transitions
steps = 200
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
#sends a proportion of S to isolation
candidate.isolation <- which(mod[,"Step"] == 1 & mod[,"Isolation"] == 0)
S.iso.transition <- rbern(length(candidate.isolation), S.new.iso)
mod[candidate.isolation,c("Isolation","Isolation Counter")] <- cbind(S.iso.transition,S.iso.transition)
#mod[candidate.isolation,c("Isolation","Isolation Counter")]
#Transition from S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0) , "Step"])/
nrow(mod[ mod[,"Isolation"] == 0,])
transition <- rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]), Pspread * Pmeet)
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]  +  transition
# I to R
#Sends a proportion of Infected to Isolation (Utility < 1 sd)
I.iso.transition <- rbern(length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
# Stationary Transition rate Precover
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +
rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- length(mod[mod[,"Step"] == 1,"Isolation"])
newI <- length(mod[mod[,"Step"] == 2,"Isolation"])
newR <- length(mod[mod[,"Step"] == 3,"Isolation"])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "Suseptible")) + geom_line(aes(y = I, colour = "Infected")) + geom_line(aes(y = R, colour = "Recovered")) + xlim(0,250)
mod[,"Isolation"]
library(tidyverse)
library(lubridate)
library(Rlab)
#setting up variables
S <-  c(5000000)
I <-  c(20)
R <-  c(0)
N = S[1] + I[1] + R[1]
Pspread <-  0.4
Precover <-  0.1
#Basic Model
#if You're infected you're more likely to stay home
#if you're not infected you go around as bout
#
#
steps = 5000
for( i in 2:steps){
S <- c(S, S[i-1] - (Pcontact * Pspread * I[i-1]/N * S[i-1]))
I <- c(I, I[i-1] + (Pcontact * Pspread * I[i-1]/N * S[i-1]) - (Precover * I[i-1]))
R <- c(R, R[i-1] + Precover * I[i-1])
}
data <- data.frame(S,I,R) %>% mutate(step = 1:n())
data
data %>% ggplot(aes(x = step)) + geom_line(aes(y = S, color = "green")) + geom_line(aes(y = I, color = "yellow")) + geom_line(aes(y = R, color = "red")) + xlim(0,200)
### Parameters
#init population and probabilities
S <-  499980
I <-  20
R <-  0
#proportion of S and I isolating at initial
S.isolate <- 0.05
I.isolate <- 0.01
#beginning params
Pspread <-  0.6
Pcontact <-  0.2
Precover <-  0.05
#proportion in isolation (eg 10% of infected goes into isolation each round)
S.new.iso <- 0.005
I.new.iso <- 0.05
N = S + I + R
#sets up the matrix
mod <- matrix(NA, nrow = N, ncol = 3)
colnames(mod) <- c("Step","Isolation", "Isolation Counter")
#Step: S = 1, I = 2, R = 3
#Isolate: 1 = True, 0 = False
#sets up SIR
mod[1:S,1] <- 1
mod[(S+1):(S+I), 1] <- 2
if(S + I + 1 <= S + I + R){
mod[(S + I + 1):(S + I + R),1] <- 3
}
#sets up isolation
# S.isolate in isolation
# I.isolate in isolation
mod[mod[,"Step"] == 1,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 1,]), S.isolate)
mod[mod[,"Step"] == 2,"Isolation"] <- rbern(nrow(mod[mod[,"Step"] == 2,]), I.isolate)
mod[mod[,"Step"] == 3,"Isolation"] <- 0
mod[,"Isolation Counter"] <- 0
#display test
head(mod)
#sets up data frame
SIRdf <- data.frame("Step" = 0, "S" = S, "I" = I, "R" = R)
SIRdf
#transitions
steps = 200
for(i in 1:steps){
#increase the day count for Isolation Counter + leaves isolation after 14 days
mod[mod[,"Isolation"] == 1, "Isolation Counter"] = mod[mod[,"Isolation"] == 1, "Isolation Counter"] + 1
mod[mod[,"Isolation Counter"] >= 14, "Isolation"] = 0
mod[mod[,"Isolation Counter"] >= 14, "Isolation Counter"] = 0
# S to I
#sends a proportion of S to isolation
candidate.isolation <- which(mod[,"Step"] == 1 & mod[,"Isolation"] == 0)
S.iso.transition <- rbern(length(candidate.isolation), S.new.iso)
mod[candidate.isolation,c("Isolation","Isolation Counter")] <- cbind(S.iso.transition,S.iso.transition)
#Transition from S to I
# The to meet is sum(infected not isolated)/sum(not isolating)
# Look at People that are not isolating and calculating what the probability of them meeting is
Pmeet <- length(mod[(mod[,"Step"] == 2 & mod[,"Isolation"] == 0) , "Step"])/
nrow(mod[ mod[,"Isolation"] == 0,])
transition <- rbern(length(mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]), Pspread * Pmeet)
mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"] <- mod[(mod[,"Step"] == 1 & mod[,"Isolation"] == 0) , "Step"]  +  transition
# I to R
#Sends a proportion of Infected to Isolation (Utility < 1 sd)
I.iso.transition <- rbern(length(mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, "Isolation"]), I.new.iso)
mod[mod[,"Step"] == 2 & mod[,"Isolation"] == 0, c("Isolation","Isolation Counter")] <- cbind(I.iso.transition,I.iso.transition)
# Stationary Transition rate Precover
mod[mod[,"Step"] == 2, "Step"] <- mod[mod[,"Step"] == 2, "Step"]  +  rbern(length(mod[mod[,"Step"] == 2, "Step"]), Precover)
#R
#everyone that is recovered goes out of isolation
mod[mod[,"Step"] == 3, c("Isolation","Isolation Counter")] <- c(0,0)
#updates data frame
newS <- length(mod[mod[,"Step"] == 1,"Isolation"])
newI <- length(mod[mod[,"Step"] == 2,"Isolation"])
newR <- length(mod[mod[,"Step"] == 3,"Isolation"])
SIRdf <- rbind(SIRdf,c(i,newS,newI,newR))
}
SIRdf
SIRdf %>% ggplot(aes(x = Step)) + geom_line(aes(y = S, colour = "Suseptible")) + geom_line(aes(y = I, colour = "Infected")) + geom_line(aes(y = R, colour = "Recovered")) + xlim(0,250)
